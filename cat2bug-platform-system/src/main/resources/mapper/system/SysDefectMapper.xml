<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat2bug.system.mapper.SysDefectMapper">
    
    <resultMap type="com.cat2bug.common.core.domain.entity.SysDefect" id="SysDefectResult">
        <result property="defectId"    column="defect_id"    />
        <result property="projectNum"    column="project_num"    />
        <result property="defectType"    column="defect_type"  typeHandler="com.cat2bug.common.core.domain.handle.SysDefectTypeEnumTypeHandler"  />
        <result property="defectTypeName"    column="defect_type"  typeHandler="com.cat2bug.common.core.domain.handle.SysDefectTypeEnumTypeHandler"  />
        <result property="defectName"    column="defect_name"    />
        <result property="defectDescribe"    column="defect_describe"    />
        <result property="annexUrls"    column="annex_urls"  />
        <result property="imgUrls"    column="img_urls"   />
        <result property="projectId"    column="project_id"    />
        <result property="projectName"    column="project_name"    />
        <result property="testPlanId"    column="test_plan_id"    />
        <result property="caseId"    column="case_id"    />
        <result property="dataSources"    column="data_sources"    />
        <result property="dataSourcesParams"    column="data_sources_params"    />
        <result property="moduleId"    column="module_id"    />
        <result property="moduleName"    column="module_name"    />
        <result property="moduleVersion"    column="module_version"    />
        <result property="createBy"    column="create_by"    />
        <result property="createMember"    column="create_member"   typeHandler="com.cat2bug.system.domain.handle.SysUserTypeHandler"  />
        <result property="createMemberName"    column="create_member_name"   />
        <result property="createById"    column="create_by_id"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateById"    column="update_by_id"    />
        <result property="defectState"    column="defect_state"    typeHandler="com.cat2bug.common.core.domain.handle.SysDefectStateEnumTypeHandler"  />
        <result property="defectStateName"    column="defect_state"    typeHandler="com.cat2bug.common.core.domain.handle.SysDefectStateEnumTypeHandler"    />
        <result property="caseStepId"    column="case_step_id"    />
        <result property="handleBy"    column="handle_by"  typeHandler="com.cat2bug.common.core.domain.handle.LongArrayTypeHandler"  />
        <result property="handleByList"    column="handle_by_list"  typeHandler="com.cat2bug.system.domain.handle.SysUserArrayTypeHandler"  />
        <result property="handleTime"    column="handle_time"    />
        <result property="defectLevel"    column="defect_level"    />
        <result property="collect"    column="collect"    />
        <result property="rejectCount"    column="reject_count"    />
        <result property="handlePassTime"    column="handle_pass_time"    />
        <result property="handleStartTime"    column="handle_start_time"    />
        <result property="planStartTime"    column="plan_start_time"    />
        <result property="planEndTime"    column="plan_end_time"    />
    </resultMap>

    <resultMap type="SysVersion" id="SysVersionResult">
        <result property="version"    column="version"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>
    <sql id="selectSysDefectVo" databaseId="h2">
                SELECT
                    d.defect_id,
                    d.project_num,
                    d.defect_type,
                    d.defect_name,
                    d.defect_describe,
                    d.annex_urls,
                    d.img_urls,
                    d.project_id,
                    p.project_name,
                    d.test_plan_id,
                    d.case_id,
                    d.data_sources,
                    d.data_sources_params,
                    d.module_id,
                    m.module_name,
                    d.module_version,
                    d.create_by,
                    d.create_by_id,
                    d.update_time,
                    d.create_time,
                    d.update_by,
                    d.update_by_id,
                    d.defect_state,
                    d.case_step_id,
                    d.handle_by,
                    d.plan_start_time,
                    d.plan_end_time,
                    un.user_infos AS handle_by_list,
                    cm.user_infos AS create_member,
                    cm.nick_name AS create_member_name,
                    d.handle_time,
                    d.defect_level,
                    ud.collect,
                    rc.reject_count,
                    lt.handle_pass_time,
                    lt.handle_start_time
                FROM
                    sys_defect d
                        LEFT JOIN sys_module m ON m.module_id = d.module_id
                        LEFT JOIN sys_project p ON d.project_id = p.project_id
                        LEFT JOIN sys_user_defect ud ON ud.defect_id = d.defect_id
                                    <if test="currentUserId != null ">
                                       and ud.user_id = #{currentUserId}
                                    </if>
                        LEFT JOIN (
                            SELECT
                            d2.defect_id,
                            u.nick_name,
                            CONCAT('{"userId":',
                            CASE WHEN u.user_id IS NOT NULL THEN user_id ELSE 0 END,
                            ',"nickName":',
                            CASE WHEN u.nick_name IS NOT NULL THEN CONCAT('"',u.nick_name,'"') ELSE 'null' END,
                            ',"userName":',
                            CASE WHEN u.user_name IS NOT NULL THEN CONCAT('"',u.user_name,'"') ELSE 'null' END,
                            ',"avatar":',
                            CASE WHEN u.avatar IS NOT NULL THEN CONCAT('"',u.avatar,'"') ELSE 'null' END,

                            '}') AS user_infos
                            FROM
                            sys_defect d2
                            LEFT JOIN sys_user u ON d2.create_by_id = u.user_id
                            GROUP BY
                            d2.defect_id
                        ) cm ON cm.defect_id = d.defect_id
                        LEFT JOIN (
                            SELECT
                                d1.defect_id,
                                CONCAT('[', GROUP_CONCAT( CONCAT('{"userId":',
                                 CASE WHEN u.user_id IS NOT NULL THEN user_id ELSE 0 END,
                                 ',"nickName":',
                                 CASE WHEN u.nick_name IS NOT NULL THEN CONCAT('"',u.nick_name,'"') ELSE 'null' END,
                                 ',"userName":',
                                 CASE WHEN u.user_name IS NOT NULL THEN CONCAT('"',u.user_name,'"') ELSE 'null' END,
                                 ',"avatar":',
                                 CASE WHEN u.avatar IS NOT NULL THEN CONCAT('"',u.avatar,'"') ELSE 'null' END,

                                 '}')), ']') AS user_infos
                            FROM
                                sys_defect d1
                                LEFT JOIN sys_user u ON d1.handle_by REGEXP CONCAT('\b',u.user_id,'\b') OR d1.handle_by REGEXP CONCAT('\\b',u.user_id,'\\b')
                            GROUP BY
                                d1.defect_id
                        ) un ON un.defect_id = d.defect_id
                        LEFT JOIN (
                            SELECT
                            l.defect_id,
                            count(*) AS reject_count
                            FROM
                            sys_defect_log l
                            JOIN ( SELECT defect_id, max( create_time ) max_create_time FROM sys_defect_log WHERE defect_log_type = 0 OR defect_log_type = 7 GROUP BY defect_id ) ld ON ld.defect_id = l.defect_id
                            AND l.create_time > ld.max_create_time
                            WHERE
                            l.defect_log_type = 4
                            GROUP BY
                            l.defect_id
                        ) rc ON rc.defect_id = d.defect_id
                        LEFT JOIN (
                            SELECT
                            l.defect_id,
                            IFNULL(passl.pass_create_time ,#{currentTime}) as handle_pass_time,
                            maxl.max_create_time as handle_start_time
                            FROM
                            sys_defect_log l
                            JOIN ( SELECT defect_id, max( create_time ) max_create_time FROM sys_defect_log WHERE defect_log_type = 0 OR defect_log_type = 7 GROUP BY defect_id ) maxl ON maxl.defect_id = l.defect_id AND l.create_time >= maxl.max_create_time
                            LEFT JOIN ( SELECT defect_id, max( create_time ) pass_create_time FROM sys_defect_log WHERE defect_log_type = 3 GROUP BY defect_id ) passl ON passl.defect_id = l.defect_id AND passl.pass_create_time>maxl.max_create_time
                            GROUP BY
                            l.defect_id
                        ) lt ON lt.defect_id = d.defect_id
    </sql>
    <sql id="selectSysDefectVo">
        SELECT
        d.defect_id,
        d.project_num,
        d.defect_type,
        d.defect_name,
        d.defect_describe,
        d.annex_urls,
        d.img_urls,
        d.project_id,
        p.project_name,
        d.test_plan_id,
        d.case_id,
        d.data_sources,
        d.data_sources_params,
        d.module_id,
        m.module_name,
        d.module_version,
        d.create_by,
        d.create_by_id,
        d.update_time,
        d.create_time,
        d.update_by,
        d.update_by_id,
        d.defect_state,
        d.case_step_id,
        d.handle_by,
        d.plan_start_time,
        d.plan_end_time,
        (
        SELECT CONCAT('[', GROUP_CONCAT(
        CONCAT(
        '{"userId":', IFNULL(u.user_id, 0),
        ',"nickName":"', IFNULL(u.nick_name, ''), '"',
        ',"userName":"', IFNULL(u.user_name, ''), '"',
        ',"avatar":"', IFNULL(u.avatar, ''), '"',
        '}'
        )
        ), ']')
        FROM sys_user u
        WHERE FIND_IN_SET(u.user_id, REPLACE(d.handle_by, ' ', '')) > 0
        ) AS handle_by_list,
        CONCAT(
        '{"userId":', IFNULL(u_create.user_id, 0),
        ',"nickName":"', IFNULL(u_create.nick_name, ''), '"',
        ',"userName":"', IFNULL(u_create.user_name, ''), '"',
        ',"avatar":"', IFNULL(u_create.avatar, ''), '"',
        '}'
        ) AS create_member,
        IFNULL(u_create.nick_name, '') AS create_member_name,
        d.handle_time,
        d.defect_level,
        IFNULL(ud.collect, 0) AS collect,
        (
        SELECT COUNT(*)
        FROM sys_defect_log l
        WHERE l.defect_id = d.defect_id
        AND l.defect_log_type = 4
        AND l.create_time > (
        SELECT MAX(create_time)
        FROM sys_defect_log
        WHERE defect_id = d.defect_id
        AND (defect_log_type = 0 OR defect_log_type = 7)
        )
        ) AS reject_count,
        IFNULL(
        (
        SELECT MAX(create_time)
        FROM sys_defect_log
        WHERE defect_id = d.defect_id
        AND defect_log_type = 3
        AND create_time > (
        SELECT MAX(create_time)
        FROM sys_defect_log
        WHERE defect_id = d.defect_id
        AND (defect_log_type = 0 OR defect_log_type = 7)
        )
        ),
        #{currentTime}
        ) AS handle_pass_time,
        (
        SELECT MAX(create_time)
        FROM sys_defect_log
        WHERE defect_id = d.defect_id
        AND (defect_log_type = 0 OR defect_log_type = 7)
        ) AS handle_start_time
        FROM
        sys_defect d
        LEFT JOIN sys_module m ON m.module_id = d.module_id
        LEFT JOIN sys_project p ON d.project_id = p.project_id
        LEFT JOIN sys_user_defect ud ON ud.defect_id = d.defect_id
        <if test="currentUserId != null ">
            and ud.user_id = #{currentUserId}
        </if>
        LEFT JOIN sys_user u_create ON u_create.user_id = d.create_by_id
    </sql>

    <select id="getProjectDefectMaxNum" resultType="Long">
        select IFNULL(MAX(project_num),0) from sys_defect where project_id=#{projectId}
    </select>

    <select id="selectSysDefectList" resultMap="SysDefectResult">
        <include refid="selectSysDefectVo"/>
        <where>
            <if test="defect.projectNum != null "> and d.project_num = #{defect.projectNum}</if>
            <if test="defect.defectType != null "> and d.defect_type = #{defect.defectType, typeHandler=com.cat2bug.common.core.domain.handle.SysDefectTypeEnumTypeHandler }</if>
            <if test="defect.defectName != null  and defect.defectName != ''"> and (d.defect_name like concat('%', #{defect.defectName}, '%') or d.defect_name=#{defect.defectName})</if>
            <if test="defect.projectId != null "> and d.project_id = #{defect.projectId}</if>
            <if test="defect.testPlanId != null "> and d.test_plan_id = #{defect.testPlanId}</if>
            <if test="defect.caseId != null "> and d.case_id = #{defect.caseId}</if>
            <if test="defect.dataSources != null "> and d.data_sources = #{defect.dataSources}</if>
            <if test="defect.dataSourcesParams != null  and defect.dataSourcesParams != ''"> and d.data_sources_params = #{defect.dataSourcesParams}</if>
             <choose>
                 <when test="defect.moduleId == 0">and d.module_id IS NULL</when>
                 <when test="defect.moduleId != null and defect.moduleId > 0">and d.module_id = #{defect.moduleId}</when>
                 <otherwise></otherwise>
             </choose>
            <if test="defect.moduleVersion != null and defect.moduleVersion != ''"> and d.module_version like concat('%', #{defect.moduleVersion}, '%')</if>
            <if test="defect.createBy != null  and defect.createBy != ''"> and d.create_by = #{defect.createBy}</if>
            <if test="defect.params.beginUpdateTime != null and defect.params.beginUpdateTime != '' and defect.params.endUpdateTime != null and defect.params.endUpdateTime != ''"> and d.update_time between #{defect.params.beginUpdateTime} and #{defect.params.endUpdateTime}</if>
            <if test="defect.params.beginCreateTime != null and defect.params.beginCreateTime != '' and defect.params.endCreateTime != null and defect.params.endCreateTime != ''"> and d.create_time between #{defect.params.beginCreateTime} and #{defect.params.endCreateTime}</if>
            <if test="defect.updateBy != null  and defect.updateBy != ''"> and d.update_by = #{defect.updateBy}</if>
            <if test="defect.defectState != null "> and d.defect_state = #{defect.defectState, typeHandler=com.cat2bug.common.core.domain.handle.SysDefectStateEnumTypeHandler}</if>
            <if test="defect.params.collect != null and defect.params.collect > 0  "> and ud.collect = #{defect.params.collect}</if>
            <if test="defect.params.defectStates != null and defect.params.defectStates != ''"> and
                <foreach collection="defect.params.defectStates.split(',')" item="state" separator=" or " open="(" close=")">
                    d.defect_state = #{state}
                </foreach>
            </if>
            <if test="defect.handleBy != null  and defect.handleBy != ''"> and
                <foreach collection="defect.handleBy" item="b" separator=" or " open="(" close=")">
                    d.handle_by REGEXP CONCAT('\b',#{b},'\b') OR d.handle_by REGEXP CONCAT('\\b',#{b},'\\b')
                </foreach>
            </if>
            <if test="defect.params.defectIds != null and defect.params.defectIds != ''"> and
                <foreach collection="defect.params.defectIds.split(',')" item="defectId" separator=" or " open="(" close=")">
                    d.defect_id = #{defectId}
                </foreach>
            </if>
            <if test="defect.params.userId != null">
             and (
                 d.handle_by REGEXP CONCAT('\b',#{defect.params.userId},'\b')
                 OR d.handle_by REGEXP CONCAT('\\b',#{defect.params.userId},'\\b')
                 OR d.create_by_id=#{defect.params.userId}
                 OR d.update_by_id=#{defect.params.userId}
             )
            </if>
            <if test="defect.params.calendarStartDate != null and defect.params.calendarStartDate != '' and defect.params.calendarEndDate != null and defect.params.calendarEndDate != ''">
             and (
                (d.plan_start_time between #{defect.params.calendarStartDate} and #{defect.params.calendarEndDate})
                or (d.plan_end_time between #{defect.params.calendarStartDate} and #{defect.params.calendarEndDate})
                or (d.update_time between #{defect.params.calendarStartDate} and #{defect.params.calendarEndDate})
                )
            </if>
            <if test="defect.params.beginHandleTime != null and defect.params.beginHandleTime != '' and defect.params.endHandleTime != null and defect.params.endHandleTime != ''"> and d.handle_time between #{defect.params.beginHandleTime} and #{defect.params.endHandleTime}</if>
            <if test="defect.defectLevel != null  and defect.defectLevel != ''"> and d.defect_level = #{defect.defectLevel}</if>
        </where>
    </select>
    
    <select id="selectSysDefectByDefectId" resultMap="SysDefectResult">
        <include refid="selectSysDefectVo"/>
        where d.defect_id = #{defectId}
    </select>

    <select id="selectVersionList" resultMap="SysVersionResult">
        select module_version as version, max(create_time) as create_time from sys_defect where module_version is not null and project_id=#{projectId} group by module_version
    </select>

    <insert id="insertSysDefect" parameterType="com.cat2bug.common.core.domain.entity.SysDefect" useGeneratedKeys="true" keyProperty="defectId">
        insert into sys_defect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectNum != null">project_num,</if>
            <if test="defectType != null">defect_type,</if>
            <if test="defectName != null and defectName != ''">defect_name,</if>
            <if test="defectDescribe != null and defectDescribe != ''">defect_describe,</if>
            <if test="annexUrls != null">annex_urls,</if>
            <if test="imgUrls != null">img_urls,</if>
            <if test="projectId != null">project_id,</if>
            <if test="testPlanId != null">test_plan_id,</if>
            <if test="caseId != null">case_id,</if>
            <if test="dataSources != null">data_sources,</if>
            <if test="dataSourcesParams != null">data_sources_params,</if>
            <if test="moduleId != null">module_id,</if>
            <if test="moduleVersion != null">module_version,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createById != null">create_by_id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateById != null">update_by_id,</if>
            <if test="defectState != null">defect_state,</if>
            <if test="caseStepId != null">case_step_id,</if>
            <if test="handleBy != null">handle_by,</if>
            <if test="handleTime != null">handle_time,</if>
            <if test="defectLevel != null">defect_level,</if>
            <if test="planStartTime != null">plan_start_time,</if>
            <if test="planEndTime != null">plan_end_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectNum != null">#{projectNum},</if>
            <if test="defectType != null">#{defectType, typeHandler=com.cat2bug.common.core.domain.handle.SysDefectTypeEnumTypeHandler},</if>
            <if test="defectName != null and defectName != ''">#{defectName},</if>
            <if test="defectDescribe != null and defectDescribe != ''">#{defectDescribe},</if>
            <if test="annexUrls != null">#{annexUrls},</if>
            <if test="imgUrls != null">#{imgUrls},</if>
            <if test="projectId != null">#{projectId},</if>
            <if test="testPlanId != null">#{testPlanId},</if>
            <if test="caseId != null">#{caseId},</if>
            <if test="dataSources != null">#{dataSources},</if>
            <if test="dataSourcesParams != null">#{dataSourcesParams},</if>
            <if test="moduleId != null">#{moduleId},</if>
            <if test="moduleVersion != null">#{moduleVersion},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createById != null">#{createById},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateById != null">#{updateById},</if>
            <if test="defectState != null">#{defectState,  typeHandler=com.cat2bug.common.core.domain.handle.SysDefectStateEnumTypeHandler},</if>
            <if test="caseStepId != null">#{caseStepId},</if>
            <if test="handleBy != null">#{handleBy,typeHandler=com.cat2bug.common.core.domain.handle.LongArrayTypeHandler},</if>
            <if test="handleTime != null">#{handleTime},</if>
            <if test="defectLevel != null">#{defectLevel},</if>
            <if test="planStartTime != null">#{planStartTime},</if>
            <if test="planEndTime != null">#{planEndTime},</if>
         </trim>
    </insert>

    <insert id="batchInsertSysDefect" parameterType="SysDefect" useGeneratedKeys="true" keyProperty="defectId" keyColumn="defect_id">
        insert into sys_defect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            project_num,defect_type,defect_name,defect_describe,
            annex_urls,img_urls,project_id,module_id,module_version,
            create_by,create_by_id,update_time,create_time,update_by,update_by_id,
            defect_state,handle_by,handle_time,defect_level,defect_group_key,defect_key,plan_start_time,plan_end_time
        </trim>
        values
        <foreach collection="defectList" separator="," item="defect">
            (
            #{defect.projectNum},
            #{defect.defectType, typeHandler=com.cat2bug.common.core.domain.handle.SysDefectTypeEnumTypeHandler},
            #{defect.defectName},
            #{defect.defectDescribe},
            #{defect.annexUrls},
            #{defect.imgUrls},
            #{defect.projectId},
            #{defect.moduleId},
            #{defect.moduleVersion},
            #{defect.createBy},
            #{defect.createById},
            #{defect.updateTime},
            #{defect.createTime},
            #{defect.updateBy},
            #{defect.updateById},
            #{defect.defectState, typeHandler=com.cat2bug.common.core.domain.handle.SysDefectStateEnumTypeHandler},
            #{defect.handleBy, typeHandler=com.cat2bug.common.core.domain.handle.LongArrayTypeHandler},
            #{defect.handleTime},
            #{defect.defectLevel},
            #{defect.defectGroupKey},
            #{defect.defectKey},
            #{defect.planStartTime},
            #{defect.planEndTime}
            )
        </foreach>
    </insert>

    <update id="updateSysDefect" parameterType="com.cat2bug.common.core.domain.entity.SysDefect">
        update sys_defect
        <trim prefix="SET" suffixOverrides=",">
            <if test="defectType != null">defect_type = #{defectType, typeHandler=com.cat2bug.common.core.domain.handle.SysDefectTypeEnumTypeHandler},</if>
            <if test="defectName != null and defectName != ''">defect_name = #{defectName},</if>
            <if test="defectDescribe != null and defectDescribe != ''">defect_describe = #{defectDescribe},</if>
            <if test="annexUrls != null">annex_urls = #{annexUrls},</if>
            <if test="imgUrls != null">img_urls = #{imgUrls},</if>
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="testPlanId != null">test_plan_id = #{testPlanId},</if>
            <if test="caseId != null">case_id = #{caseId},</if>
            <if test="dataSources != null">data_sources = #{dataSources},</if>
            <if test="dataSourcesParams != null">data_sources_params = #{dataSourcesParams},</if>
            <if test="moduleId != null">module_id = #{moduleId},</if>
            <if test="moduleVersion != null">module_version = #{moduleVersion},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createById != null">create_by_id = #{createById},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="defectState != null">defect_state = #{defectState,  typeHandler=com.cat2bug.common.core.domain.handle.SysDefectStateEnumTypeHandler},</if>
            <if test="caseStepId != null">case_step_id = #{caseStepId},</if>
            <if test="handleBy != null">handle_by = #{handleBy, typeHandler=com.cat2bug.common.core.domain.handle.LongArrayTypeHandler},</if>
            <if test="handleTime != null">handle_time = #{handleTime},</if>
            <if test="defectLevel != null">defect_level = #{defectLevel},</if>
            <if test="planStartTime != null">plan_start_time = #{planStartTime},</if>
            <if test="planEndTime != null">plan_end_time = #{planEndTime},</if>
        </trim>
        where defect_id = #{defectId}
    </update>

    <delete id="deleteSysDefectByDefectId" parameterType="Long">
        delete from sys_defect where defect_id = #{defectId}
    </delete>

    <delete id="deleteSysDefectByDefectIds" parameterType="String">
        delete from sys_defect where defect_id in 
        <foreach item="defectId" collection="array" open="(" separator="," close=")">
            #{defectId}
        </foreach>
    </delete>
</mapper>