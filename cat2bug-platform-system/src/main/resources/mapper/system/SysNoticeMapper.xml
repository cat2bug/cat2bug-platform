<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat2bug.system.mapper.SysNoticeMapper">
    
    <resultMap type="SysNotice" id="SysNoticeResult">
        <result property="noticeId"       column="notice_id"       />
        <result property="noticeTitle"    column="notice_title"    />
        <result property="noticeType"     column="notice_type"     />
        <result property="noticeContent"  column="notice_content"  />
        <result property="status"         column="status"          />
        <result property="createBy"       column="create_by"       />
        <result property="createTime"     column="create_time"     />
        <result property="updateBy"       column="update_by"       />
        <result property="updateTime"     column="update_time"     />
        <result property="remark"         column="remark"          />
        <result property="teamName"         column="team_name"          />
        <result property="projectName"         column="project_name"          />
        <result property="groupName"         column="group_name"          />
        <result property="isRead"         column="is_read"          />
        <result property="receiverId"         column="receiver_id"          />
    </resultMap>
    
    <sql id="selectNoticeVo">
        select n.notice_id, n.notice_title, n.notice_type, cast(n.notice_content as char) as notice_content,
               n.group_name, n.status, n.create_by, n.create_time, n.update_by, n.update_time, n.remark,n.is_read,
               n.receiver_id,
            p.project_name,
            t.team_name
		from sys_notice n
        LEFT JOIN sys_project p ON p.project_id = n.project_id
        LEFT JOIN sys_team t ON t.team_id = p.team_id
    </sql>
    
    <select id="selectNoticeById" parameterType="Long" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        where notice_id = #{noticeId}
    </select>
    
    <select id="selectNoticeList" parameterType="SysNotice" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        <where>
            n.receiver_id = #{receiverId}
            <if test="groupName != null and groupName != ''">
                AND n.group_name = #{groupName}
            </if>
			<if test="noticeTitle != null and noticeTitle != ''">
				AND n.notice_title like concat('%', #{noticeTitle}, '%')
			</if>
			<if test="noticeType != null and noticeType != ''">
				AND n.notice_type = #{noticeType}
			</if>
			<if test="createBy != null and createBy != ''">
				AND n.create_by like concat('%', #{createBy}, '%')
			</if>
		</where>
		order by n.create_time DESC
    </select>

    <select id="noticeGroupStatistics" parameterType="java.lang.Long" resultType="java.util.Map">
        SELECT
        group_name AS groupName,
        sum( CASE WHEN is_read = 0 OR is_read IS NULL THEN 1 ELSE 0 END ) AS notReadCount,
        sum( CASE WHEN is_read = 1 THEN 1 ELSE 0 END ) AS readCount
        FROM sys_notice
        <where>
            receiver_id = #{receiverId}
        </where>
        group by group_name
    </select>

    <insert id="insertNotice" parameterType="SysNotice">
        insert into sys_notice (
			<if test="noticeTitle != null and noticeTitle != '' ">notice_title, </if>
			<if test="noticeType != null and noticeType != '' ">notice_type, </if>
			<if test="noticeContent != null and noticeContent != '' ">notice_content, </if>
			<if test="status != null and status != '' ">status, </if>
			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
			<if test="noticeTitle != null and noticeTitle != ''">#{noticeTitle}, </if>
			<if test="noticeType != null and noticeType != ''">#{noticeType}, </if>
			<if test="noticeContent != null and noticeContent != ''">#{noticeContent}, </if>
			<if test="status != null and status != ''">#{status}, </if>
			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
		)
    </insert>
	 
    <update id="updateNotice" parameterType="SysNotice">
        update sys_notice 
        <set>
            <if test="noticeTitle != null and noticeTitle != ''">notice_title = #{noticeTitle}, </if>
            <if test="noticeType != null and noticeType != ''">notice_type = #{noticeType}, </if>
            <if test="noticeContent != null">notice_content = #{noticeContent}, </if>
            <if test="status != null and status != ''">status = #{status}, </if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="isRead != null and isRead != ''">is_read = #{isRead},</if>
 			update_time = sysdate()
        </set>
        where notice_id = #{noticeId}
    </update>
	
    <delete id="deleteNoticeById" parameterType="Long">
        delete from sys_notice where notice_id = #{noticeId}
    </delete>
    
    <delete id="deleteNoticeByIds" parameterType="Long">
        delete from sys_notice where notice_id in 
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>
    
</mapper>