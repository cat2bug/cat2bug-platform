<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat2bug.system.mapper.SysPlanMapper">
    
    <resultMap type="SysPlan" id="SysPlanResult">
        <result property="planId"    column="plan_id"    />
        <result property="planNumber"    column="plan_number"    />
        <result property="planName"    column="plan_name"    />
        <result property="planVersion"    column="plan_version"    />
        <result property="planStartTime"    column="plan_start_time"    />
        <result property="planEndTime"    column="plan_end_time"    />
        <result property="createById"    column="create_by_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateById"    column="update_by_id"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="projectId"    column="project_id"    />
        <result property="reportId"    column="report_id"    />
        <result property="passCount"    column="pass_count"    />
        <result property="failCount"    column="fail_count"    />
        <result property="defectLevelUrgentCount"    column="defect_level_urgent_count"    />
        <result property="defectLevelHeightCount"    column="defect_level_height_count"    />
        <result property="defectLevelMiddleCount"    column="defect_level_middle_count"    />
        <result property="defectLevelLowCount"    column="defect_level_low_count"    />
        <result property="unexecutedCount"    column="unexecuted_count"    />
        <result property="itemTotal"    column="item_total"    />
        <result property="processingStateCount"    column="processing_state_count"    />
        <result property="auditStateCount"    column="audit_state_count"    />
        <result property="rejectedStateCount"    column="rejected_state_count"    />
        <result property="closeStateCount"    column="close_state_count"    />
        <result property="defectCount"    column="defect_count"    />
        <result property="moduleCount"    column="module_count"    />
        <result property="createDefectCountByTester"    column="create_defect_count_by_tester"    />
        <result property="createDefectCountByOutsider"    column="create_defect_count_by_outsider"    />
    </resultMap>

    <resultMap id="SysPlanSysPlanItemResult" type="SysPlan" extends="SysPlanResult">
        <collection property="sysPlanItemList" notNullColumn="sub_plan_item_id" javaType="java.util.List" resultMap="SysPlanItemResult" />
    </resultMap>

    <resultMap type="SysPlanItem" id="SysPlanItemResult">
        <result property="planItemId"    column="sub_plan_item_id"    />
        <result property="planId"    column="sub_plan_id"    />
        <result property="moduleId"    column="sub_module_id"    />
        <result property="caseId"    column="sub_case_id"    />
        <result property="planItemState"    column="sub_plan_item_state"    />
        <result property="updateById"    column="sub_update_by_id"    />
        <result property="updateTime"    column="sub_update_time"    />
        <result property="defectIds"    column="sub_defect_ids"  typeHandler="com.cat2bug.system.domain.handle.LongArrayTypeHandle"   />
    </resultMap>

    <sql id="selectSysPlanVo">
        SELECT
            p.plan_id,
            p.plan_number,
            p.plan_name,
            p.plan_version,
            p.plan_start_time,
            p.plan_end_time,
            p.create_by_id,
            p.create_time,
            p.update_by_id,
            p.update_time,
            p.project_id,
            p.report_id,
            u.nick_name AS update_by,
            s.pass_count,
            s.fail_count,
            s.unexecuted_count,
            s.item_total,
            s.processing_state_count,
            s.audit_state_count,
            s.rejected_state_count,
            s.close_state_count,
            s.defect_level_urgent_count,
            s.defect_level_height_count,
            s.defect_level_middle_count,
            s.defect_level_low_count,
            s.defect_count,
            s.module_count,
            s.create_defect_count_by_tester,
            s.create_defect_count_by_outsider
        FROM
            sys_plan p
                LEFT JOIN sys_user u ON u.user_id = p.update_by_id
                LEFT JOIN (
                SELECT
                    pi2.plan_id,
                    sum( CASE WHEN pi2.plan_item_state = 'pass' THEN 1 ELSE 0 END ) AS pass_count,
                    sum( CASE WHEN pi2.plan_item_state = 'not_pass' THEN 1 ELSE 0 END ) AS fail_count,
                    sum( CASE WHEN pi2.plan_item_state = 'unexecuted' THEN 1 ELSE 0 END ) AS unexecuted_count,
                    count( pi2.plan_item_id ) AS item_total,
                    IFNULL( sum( ds2.processing_state_count ), 0 ) processing_state_count,
                    IFNULL( sum( ds2.audit_state_count ), 0 ) audit_state_count,
                    IFNULL( sum( ds2.rejected_state_count ), 0 ) rejected_state_count,
                    IFNULL( sum( ds2.close_state_count ), 0 ) close_state_count,
                    IFNULL( sum( ds2.defect_level_urgent_count ), 0 ) defect_level_urgent_count,
                    IFNULL( sum( ds2.defect_level_height_count ), 0 ) defect_level_height_count,
                    IFNULL( sum( ds2.defect_level_middle_count ), 0 ) defect_level_middle_count,
                    IFNULL( sum( ds2.defect_level_low_count ), 0 ) defect_level_low_count,
                    IFNULL( sum( ds2.defect_count ), 0 ) defect_count,
                    IFNULL( sum( ms2.module_count ), 0 ) module_count,
                    IFNULL( sum( rs2.create_defect_count_by_tester ), 0 ) create_defect_count_by_tester,
                    IFNULL( sum( rs2.create_defect_count_by_outsider ), 0 ) create_defect_count_by_outsider
                FROM
                    sys_plan_item pi2
                        LEFT JOIN (
                        SELECT
                            pi3.plan_item_id,
                            SUM( CASE WHEN d3.defect_state = 0 THEN 1 ELSE 0 END ) AS processing_state_count,
                            SUM( CASE WHEN d3.defect_state = 1 THEN 1 ELSE 0 END ) AS audit_state_count,
                            SUM( CASE WHEN d3.defect_state = 3 THEN 1 ELSE 0 END ) AS rejected_state_count,
                            SUM( CASE WHEN d3.defect_state = 4 THEN 1 ELSE 0 END ) AS close_state_count,
                            SUM( CASE WHEN d3.defect_level = 'urgent' THEN 1 ELSE 0 END ) AS defect_level_urgent_count,
                            SUM( CASE WHEN d3.defect_level = 'height' THEN 1 ELSE 0 END ) AS defect_level_height_count,
                            SUM( CASE WHEN d3.defect_level = 'middle' THEN 1 ELSE 0 END ) AS defect_level_middle_count,
                            SUM( CASE WHEN d3.defect_level = 'low' THEN 1 ELSE 0 END ) AS defect_level_low_count,
                            count( pi3.plan_item_id ) AS defect_count
                        FROM
                            sys_plan_item pi3
                                JOIN sys_defect d3 ON FIND_IN_SET( d3.defect_id, pi3.defect_ids )
                        GROUP BY
                            pi3.plan_item_id
                    ) ds2 ON ds2.plan_item_id = pi2.plan_item_id
                        LEFT JOIN (
                        SELECT
                            pi4.plan_item_id,
                            count( CASE WHEN c4.module_id IS NOT NULL THEN 0 ELSE 1 END ) AS module_count
                        FROM
                            sys_plan_item pi4
                                JOIN sys_case c4 ON pi4.case_id = c4.case_id
                        GROUP BY
                            pi4.plan_item_id,
                            c4.module_id
                    ) ms2 ON ms2.plan_item_id = pi2.plan_item_id
                        LEFT JOIN (
                        SELECT
                            pi5.plan_item_id,
                            SUM( CASE WHEN upr5.role_id = 8 THEN 1 ELSE 0 END ) AS create_defect_count_by_tester,
                            SUM( CASE WHEN upr5.role_id = 9 THEN 1 ELSE 0 END ) AS create_defect_count_by_outsider
                        FROM
                            sys_plan_item pi5
                                JOIN sys_plan p5 ON p5.plan_id = pi5.plan_id
                                JOIN sys_defect_log l5 ON l5.defect_log_type = 0
                                AND FIND_IN_SET( l5.defect_id, pi5.defect_ids )
                                JOIN sys_user_project up5 ON up5.project_id = p5.project_id
                                AND JSON_CONTAINS(
                                                                     l5.receive_by,
                                                                     JSON_ARRAY( up5.user_id ))
                                JOIN sys_user_project_role upr5 ON up5.user_project_id = upr5.user_project_id
                        GROUP BY
                            pi5.plan_item_id
                    ) rs2 ON rs2.plan_item_id = pi2.plan_item_id
                GROUP BY
                    pi2.plan_id
            ) s ON s.plan_id = p.plan_id
    </sql>

    <select id="getProjectPlanMaxNum" resultType="Long">
        select IFNULL(MAX(plan_number),0) from sys_plan where project_id=#{projectId}
    </select>

    <select id="selectSysPlanList" parameterType="SysPlan" resultMap="SysPlanResult">
        <include refid="selectSysPlanVo"/>
        <where>
            <if test="planNumber != null "> and p.plan_number = #{planNumber}</if>
            <if test="planName != null  and planName != ''"> and p.plan_name like concat('%', #{planName}, '%')</if>
            <if test="planVersion != null  and planVersion != ''"> and p.plan_version like concat('%', #{planVersion}, '%')</if>
            <if test="params.beginPlanStartTime != null and params.beginPlanStartTime != '' and params.endPlanStartTime != null and params.endPlanStartTime != ''"> and plan_start_time between #{params.beginPlanStartTime} and #{params.endPlanStartTime}</if>
            <if test="params.beginPlanEndTime != null and params.beginPlanEndTime != '' and params.endPlanEndTime != null and params.endPlanEndTime != ''"> and plan_end_time between #{params.beginPlanEndTime} and #{params.endPlanEndTime}</if>
            <if test="createById != null "> and p.create_by_id = #{createById}</if>
            <if test="updateById != null "> and p.update_by_id = #{updateById}</if>
            <if test="projectId != null "> and p.project_id = #{projectId}</if>
            <if test="reportId != null "> and p.report_id = #{reportId}</if>
        </where>
        order by create_time desc
    </select>
    
    <select id="selectSysPlanByPlanId" parameterType="String" resultMap="SysPlanSysPlanItemResult">
        select a.plan_id, a.plan_number, a.plan_name, a.plan_version, a.plan_start_time, a.plan_end_time, a.create_by_id, a.create_time, a.update_by_id, a.update_time, a.project_id, a.report_id,
 b.plan_item_id as sub_plan_item_id, b.plan_id as sub_plan_id, b.module_id as sub_module_id, b.case_id as sub_case_id, b.plan_item_state as sub_plan_item_state, b.update_by_id as sub_update_by_id, b.update_time as sub_update_time, b.defect_ids as sub_defect_id
        from sys_plan a
        left join sys_plan_item b on b.plan_id = a.plan_id
        where a.plan_id = #{planId}
    </select>
        
    <insert id="insertSysPlan" parameterType="SysPlan">
        insert into sys_plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="planId != null">plan_id,</if>
            <if test="planNumber != null">plan_number,</if>
            <if test="planName != null and planName != ''">plan_name,</if>
            <if test="planVersion != null">plan_version,</if>
            <if test="planStartTime != null">plan_start_time,</if>
            <if test="planEndTime != null">plan_end_time,</if>
            <if test="createById != null">create_by_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateById != null">update_by_id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="projectId != null">project_id,</if>
            <if test="reportId != null">report_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="planId != null">#{planId},</if>
            <if test="planNumber != null">#{planNumber},</if>
            <if test="planName != null and planName != ''">#{planName},</if>
            <if test="planVersion != null">#{planVersion},</if>
            <if test="planStartTime != null">#{planStartTime},</if>
            <if test="planEndTime != null">#{planEndTime},</if>
            <if test="createById != null">#{createById},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateById != null">#{updateById},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="projectId != null">#{projectId},</if>
            <if test="reportId != null">#{reportId},</if>
         </trim>
    </insert>

    <update id="updateSysPlan" parameterType="SysPlan">
        update sys_plan
        <trim prefix="SET" suffixOverrides=",">
            <if test="planNumber != null">plan_number = #{planNumber},</if>
            <if test="planName != null and planName != ''">plan_name = #{planName},</if>
            <if test="planVersion != null">plan_version = #{planVersion},</if>
            <if test="planStartTime != null">plan_start_time = #{planStartTime},</if>
            <if test="planEndTime != null">plan_end_time = #{planEndTime},</if>
            <if test="createById != null">create_by_id = #{createById},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateById != null">update_by_id = #{updateById},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="reportId != null">report_id = #{reportId},</if>
        </trim>
        where plan_id = #{planId}
    </update>

    <delete id="deleteSysPlanByPlanId" parameterType="String">
        delete from sys_plan where plan_id = #{planId}
    </delete>

    <delete id="deleteSysPlanByPlanIds" parameterType="String">
        delete from sys_plan where plan_id in 
        <foreach item="planId" collection="array" open="(" separator="," close=")">
            #{planId}
        </foreach>
    </delete>
    
    <delete id="deleteSysPlanItemByPlanIds" parameterType="String">
        delete from sys_plan_item where plan_id in 
        <foreach item="planId" collection="array" open="(" separator="," close=")">
            #{planId}
        </foreach>
    </delete>

    <delete id="deleteSysPlanItemByPlanId" parameterType="String">
        delete from sys_plan_item where plan_id = #{planId}
    </delete>

    <insert id="batchSysPlanItem">
        insert into sys_plan_item( plan_item_id, plan_id, module_id, case_id, plan_item_state, update_by_id, update_time, defect_ids) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.planItemId}, #{item.planId}, #{item.moduleId}, #{item.caseId}, #{item.planItemState}, #{item.updateById}, #{item.updateTime}, #{item.defectIds, typeHandler=com.cat2bug.system.domain.handle.LongArrayTypeHandle})
        </foreach>
    </insert>
</mapper>